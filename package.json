{
  "name": "sigment-language-constructor",
  "version": "1.0.0",
  "description": "A system for constructing spoken and written languages based on etymological principles",
  "main": "src/index.js",
  "type": "module",
  "scripts": {
    "start": "node src/cli.js interactive",
    "cli": "node src/cli.js",
    "demo": "node examples/demo.js",
    "dev": "node --watch src/cli.js",
    "test": "node --test test/*.test.js",
    "build": "npm install && npm run setup",
    "setup": "node -e \"const fs = require('fs'); ['dictionaries', 'data', 'examples'].forEach(dir => !fs.existsSync(dir) && fs.mkdirSync(dir, {recursive: true})); console.log('✅ Setup complete')\"",
    "clean": "node -e \"const fs = require('fs'); const path = require('path'); if(fs.existsSync('dictionaries')) { fs.rmSync('dictionaries', {recursive: true, force: true}); fs.mkdirSync('dictionaries'); } console.log('✅ Clean complete')\"",
    "clean:all": "node -e \"const fs = require('fs'); ['dictionaries', 'node_modules'].forEach(dir => fs.existsSync(dir) && fs.rmSync(dir, {recursive: true, force: true})); fs.existsSync('package-lock.json') && fs.unlinkSync('package-lock.json'); console.log('✅ Deep clean complete')\"",
    "install:fresh": "npm run clean:all && npm install && npm run setup",
    "quick-start": "npm run build && node src/cli.js interactive",
    "generate": "node src/cli.js generate",
    "translate": "node src/cli.js translate",
    "list": "node src/cli.js list"
  },
  "bin": {
    "sigment": "./src/cli.js"
  },
  "dependencies": {
    "commander": "^11.1.0",
    "inquirer": "^9.2.12",
    "axios": "^1.6.0"
  },
  "devDependencies": {
    "eslint": "^8.55.0"
  },
  "keywords": ["language", "etymology", "phonetics", "linguistics", "sigment"],
  "author": "",
  "license": "MIT"
}